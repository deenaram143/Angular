Data binding is a fundamental concept in Angular that allows you to synchronize data between a component and its associated template (view). Angular supports four types of data binding:

Interpolation: One-way data binding from component to template.
Property Binding: One-way data binding from component to template.
Event Binding: One-way data binding from template to component.
Two-way Binding: Two-way data binding between component and template.
Let's explore each type of data binding with different examples in detail:

1. Interpolation (One-Way Data Binding from Component to Template):

Interpolation allows you to embed expressions within double curly braces {{ }} in the template. These expressions are evaluated and displayed in the UI. It is primarily used for displaying component properties in the template.

Example:

In your component:
export class MyComponent {
  message = 'Hello, Angular!';
}
In your template:

<p>{{ message }}</p>
In this example, {{ message }} displays the value of the message property in the template.

2. Property Binding (One-Way Data Binding from Component to Template):

Property binding lets you set the value of an HTML element's property based on a component property. This allows you to update an element's properties such as src, disabled, or other attributes.

Example:

In your component:


export class MyComponent {
  imageUrl = 'https://example.com/image.png';
  isButtonDisabled = true;
}
In your template:


<img [src]="imageUrl" alt="Image" />
<button [disabled]="isButtonDisabled">Click Me</button>
Here, [src] binds the imageUrl property to the src attribute of an img element, and [disabled] binds the isButtonDisabled property to the disabled attribute of a button.

3. Event Binding (One-Way Data Binding from Template to Component):

Event binding allows you to listen for and respond to events triggered by HTML elements in your template. You can associate event listeners with elements and execute methods in your component when those events occur.

Example:

In your component:

export class MyComponent {
  onButtonClick() {
    alert('Button clicked!');
  }
}
In your template:


<button (click)="onButtonClick()">Click Me</button>
When the button is clicked, the onButtonClick method in the component is executed, displaying an alert.

4. Two-Way Binding (Two-Way Data Binding):

Two-way data binding combines property binding and event binding to keep a component property and an element's value in sync. It is commonly used with input elements.

Example:

In your component:

export class MyComponent {
  inputValue = 'Initial Value';
}
In your template:

<input [(ngModel)]="inputValue" />
<p>Value: {{ inputValue }}</p>
With [(ngModel)], changes in the input field automatically update inputValue, and changes to inputValue update the input field's value in real time.

These are the fundamental concepts of data binding in Angular. They enable you to create dynamic, interactive, and responsive web applications by connecting component logic to your templates.